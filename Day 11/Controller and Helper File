=============================================================
CONTROLLER
=============================================================
({
    checkDateValid: function(component, event, helper) {
        var startDate = component.get("v.StartDate");
        var endDate = component.get("v.EndDate");
        
        if (startDate && endDate && startDate <= endDate) {
            component.set("v.isDateValid", true);
        } else {
            component.set("v.isDateValid", false);
        }
        if (component.get("v.isDateValid")){
            helper.checkAvailabilityBooking(component);
        }
    },
    openModel: function(component, event, helper) {
        component.set("v.isModalOpen", true);
    },
    closeModel: function(component, event, helper) {
        component.set("v.isModalOpen", false);
        component.set("v.isBookingConfirmed", false);
    },
    
    handleSave: function(component, event, helper) {
        var action = component.get("c.insertBooking");
        console.log(action);
        action.setParams({"startDate": component.get("v.StartDate"), "endDate": component.get("v.EndDate"), "accountId": component.get("v.recordId")});
        $A.enqueueAction(action);
        component.set("v.isModalOpen", false);
        component.set("v.isBookingConfirmed", true);
    }
})
=============================================================
HANDLER
=============================================================
({
    checkAvailabilityBooking: function(component) {
        var action = component.get("c.relatedAccounts");
        action.setParams({ "AccId": component.get("v.recordId") });
        action.setCallback(this, function(response) {
            var state = response.getState();
            if (state === "SUCCESS") {
                var bookingList = response.getReturnValue();
                var isBookAvailable=true;
                var counter=0;
                bookingList.forEach(function(booking) {
                    var bookingStartDate = new Date(booking.Start_Date__c);
                    var bookingEndDate = new Date(booking.End_Date__c);
                    var startDate = new Date(component.get("v.StartDate"));
                    var endDate = new Date(component.get("v.EndDate"));
                    if (!(bookingStartDate > startDate && bookingStartDate >= endDate) &&
                        !(bookingEndDate <= startDate && bookingEndDate < endDate)) {
                        isBookAvailable=false;
                    }
                    console.log(isBookAvailable);
                    component.set("v.isBookingAvailable",isBookAvailable);
                    counter=counter+1;
                });
                if(counter===0){
                    component.set("v.isBookingAvailable",isBookAvailable);
                }
                component.set("v.isModalOpen",true);
            } else {
                console.error('Error in server call: ' + state);
            }
        });
        $A.enqueueAction(action);
    }
})
